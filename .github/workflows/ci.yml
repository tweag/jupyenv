name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest

    outputs:
      kernels: ${{ steps.kernels.outputs.kernels }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup
      uses: ./.github/actions/common-setup
      with:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_TWEAG_JUPYTER_NIX_AUTH_TOKEN }}

    - name: List all available kernels
      id: kernels
      run: |
        kernels="$(nix eval .#jupyterKernelsMatrix --json)}"
        echo $kernels
        echo "::set-output name=kernels::$kernels"

    - name: Check
      run: |
        nix flake check --show-trace -L


  build-kernel:
    name: Build ${{ matrix.kernel }} kernel
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix: 
        kernel: ${{ fromJSON(needs.build.outputs.kernels).kernel }}
        experimental: [false]
        include:
          - kernel: ruby
            experimental: true

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup
      uses: ./.github/actions/common-setup
      with:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_TWEAG_JUPYTER_NIX_AUTH_TOKEN }}

    - name: Build ${{ matrix.kernel }} kernel
      run: |
        path=$(nix eval --raw .#jupyterlab-kernel-${{ matrix.kernel }})
        hash=${path:11:32}
        url="https://tweag-jupyter.cachix.org/$hash.narinfo";
        echo "CACHIX_NAR_URL=$url" >> $GITHUB_ENV
        nix build -L .#jupyterlab-kernel-${{ matrix.kernel }}

    - name: Test notebook for ${{ matrix.kernel }} kernel
      run: |
        result/bin/python kernels/${{ matrix.kernel }}/test.py
