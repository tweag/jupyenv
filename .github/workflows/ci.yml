name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest

    outputs:
      kernels: ${{ steps.kernels.outputs.kernels }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup
      uses: ./.github/actions/common-setup
      with:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_TWEAG_JUPYTER_NIX_AUTH_TOKEN }}

    - name: List all available kernels
      id: kernels
      run: |
        kernels="{\"kernel\":$(nix eval .#jupyterKernels --apply builtins.attrNames --json)}"
        echo $kernels
        echo "::set-output name=kernels::$kernels"

    - name: Check
      run: |
        nix flake check --show-trace -L


  build-kernel:
    name: Build ${{ matrix.kernel }} kernel
    needs: build
    runs-on: ubuntu-latest
    # if: ${{ contains(fromJSON('["cpp", "ocaml", "ruby"]'), matrix.kernel) }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build.outputs.kernels) }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup
      uses: ./.github/actions/common-setup
      with:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_TWEAG_JUPYTER_NIX_AUTH_TOKEN }}

    - name: Build ${{ matrix.kernel }} kernel
      run: |
        path=$(nix eval --raw .#jupyterlab-kernel-${{ matrix.kernel }})
        hash=${path:11:32}
        url="https://tweag-jupyter.cachix.org/$hash.narinfo";
        echo "CACHIX_NAR_URL=$url" >> $GITHUB_ENV
        if curl --output /dev/null --silent --head --fail "$url"; then
          echo "Nothing to build!!!"
          echo ""
          echo "See build log with:"
          echo "  nix log $path"
          echo ""
        else
          nix build -L .#jupyterlab-kernel-${{ matrix.kernel }}
        fi

    - name: Test notebook for ${{ matrix.kernel }} kernel
      run: |
        if curl --output /dev/null --silent --head --fail "{{ env.CACHIX_NAR_URL }}"; then
          echo "Nothing to test!!!"
        else
          result/bin/python kernels/${{ matrix.kernel }}/test.py
        fi
